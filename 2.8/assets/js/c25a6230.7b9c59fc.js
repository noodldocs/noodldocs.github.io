"use strict";(self.webpackChunknoodl_docs=self.webpackChunknoodl_docs||[]).push([[5845],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>v});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),d=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(o.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=d(n),m=r,v=p["".concat(o,".").concat(m)]||p[m]||u[m]||i;return n?a.createElement(v,l(l({ref:t},c),{},{components:n})):a.createElement(v,l({ref:t},c))}));function v(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=m;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[p]="string"==typeof e?e:r,l[1]=s;for(var d=2;d<i;d++)l[d]=n[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},45733:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var a=n(87462),r=(n(67294),n(3905));const i={hide_title:!0,hide_table_of_contents:!0,title:"Receive Event"},l=void 0,s={unversionedId:"events/receive-event",id:"events/receive-event",title:"Receive Event",description:"This node is used to receive a signal triggered by a Send Event node. To learn more about Events check out the Events Guide.",source:"@site/nodes/events/receive-event.md",sourceDirName:"events",slug:"/events/receive-event",permalink:"/2.8/nodes/events/receive-event",draft:!1,tags:[],version:"current",frontMatter:{hide_title:!0,hide_table_of_contents:!0,title:"Receive Event"},sidebar:"nodeSidebar",previous:{title:"Send Event",permalink:"/2.8/nodes/events/send-event"},next:{title:"Substring",permalink:"/2.8/nodes/string-manipulation/substring"}},o={},d=[{value:"Inputs",id:"inputs",level:2},{value:"Outputs",id:"outputs",level:2}],c={toc:d},p="wrapper";function u(e){let{components:t,...i}=e;return(0,r.kt)(p,(0,a.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",{className:"is-hidden"},""),(0,r.kt)("h1",{id:"receive-event"},"Receive Event"),(0,r.kt)("p",null,"This node is used to receive a signal triggered by a ",(0,r.kt)("span",{className:"ndl-node"},"Send Event")," node. To learn more about ",(0,r.kt)("strong",{parentName:"p"},"Events")," check out the ",(0,r.kt)("a",{parentName:"p",href:"/docs/guides/business-logic/events"},"Events Guide"),"."),(0,r.kt)("div",{className:"ndl-image-with-background l"},(0,r.kt)("p",null,(0,r.kt)("img",{src:n(25553).Z,width:"900",height:"296"}))),(0,r.kt)("p",null,"The ",(0,r.kt)("span",{className:"ndl-node"},"Send Event")," node lets you specify a channel to broadcast to. All ",(0,r.kt)("span",{className:"ndl-node"},"Receive Event")," nodes set to that channel will be triggered simultaneously.\n"),(0,r.kt)("h2",{id:"inputs"},"Inputs"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Data"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("span",{className:"ndl-data"},"Enabled")),(0,r.kt)("td",{parentName:"tr",align:null},"This port is used to disable/enable this node. If disabled the receiver node will not be activated when the corresponding ",(0,r.kt)("a",{parentName:"td",href:"/nodes/events/send-event"},"Send Event")," node is triggered.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("span",{className:"ndl-data"},"Consume")),(0,r.kt)("td",{parentName:"tr",align:null},"This property specified if and how the event is consumed when captured by this receive event node.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("span",{className:"ndl-data"},"Channel")),(0,r.kt)("td",{parentName:"tr",align:null},"Each ",(0,r.kt)("strong",{parentName:"td"},"Receive Event")," node must listen to a specific channel. This means that when a ","[Send Event][/nodes/events/send-event]"," node of that channel is triggered all ",(0,r.kt)("strong",{parentName:"td"},"Receive Event")," nodes with the same channel will be triggered as well (depending on the propagation, please review the ",(0,r.kt)("a",{parentName:"td",href:"/docs/guides/business-logic/events"},"Events guide")," for more details).")))),(0,r.kt)("h2",{id:"outputs"},"Outputs"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Mixed"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("span",{className:"ndl-data"},"Custom Outputs")),(0,r.kt)("td",{parentName:"tr",align:null},"The ",(0,r.kt)("strong",{parentName:"td"},"Receive Event")," node will automatically get outputs from all ","[Send Event][0]"," nodes connected to the same channel. See the ","[Send Event][0]"," documentation for more details on adding ports for sending values with events.")))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Signal"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("span",{className:"ndl-signal"},"Received")),(0,r.kt)("td",{parentName:"tr",align:null},"This is a signal port, it is triggered when a signal is triggered in any ",(0,r.kt)("strong",{parentName:"td"},"Send Event")," node with the same channel as this ",(0,r.kt)("strong",{parentName:"td"},"Receive Event")," node.")))))}u.isMDXComponent=!0},25553:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/receive-event-921395b775c7a8598401e4ba757c601a.png"}}]);