"use strict";(self.webpackChunknew_noodl_docs=self.webpackChunknew_noodl_docs||[]).push([[9292],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(n),f=o,h=d["".concat(c,".").concat(f)]||d[f]||p[f]||a;return n?r.createElement(h,i(i({ref:t},u),{},{components:n})):r.createElement(h,i({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},23281:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return p}});var r=n(83117),o=n(80102),a=(n(67294),n(3905)),i=["components"],s={title:"Javascript in Cloud Functions",hide_title:!0},c=void 0,l={unversionedId:"guides/cloud-logic/javascript",id:"guides/cloud-logic/javascript",title:"Javascript in Cloud Functions",description:"Not all nodes are available to cloud functions but in terms of writing Javascript the Function and Expression nodes are available. However there are some caveats, most notably when deployed cloud functions are not running in a browser they are running in the cloud and they have a much more limited runtime environment. This means that you cannot access most of the browser APIs, the cloud runtime is limited to:",source:"@site/docs/guides/cloud-logic/javascript.md",sourceDirName:"guides/cloud-logic",slug:"/guides/cloud-logic/javascript",permalink:"/2.8/docs/guides/cloud-logic/javascript",tags:[],version:"current",frontMatter:{title:"Javascript in Cloud Functions",hide_title:!0},sidebar:"docsSidebar",previous:{title:"Logging and Debugging",permalink:"/2.8/docs/guides/cloud-logic/logging"},next:{title:"version-control",permalink:"/2.8/docs/guides/collaboration/version-control"}},u={},p=[{value:"Fetch",id:"fetch",level:2},{value:"The Request Object",id:"the-request-object",level:2}],d={toc:p};function f(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"javascript-in-cloud-functions"},"Javascript in Cloud Functions"),(0,a.kt)("p",null,"Not all nodes are available to cloud functions but in terms of writing Javascript the ",(0,a.kt)("strong",{parentName:"p"},"Function")," and ",(0,a.kt)("strong",{parentName:"p"},"Expression")," nodes are available. However there are some caveats, most notably when deployed cloud functions are not running in a browser they are running in the cloud and they have a much more limited runtime environment. This means that you cannot access most of the browser APIs, the cloud runtime is limited to:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Core Javascript Objects and Functions")," The Javascript language contains a set of core objects and functions that are all available to the cloud runtime. More info ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects"},"here"),".")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"The Noodl API")," A subset of the Noodl API is available to cloud functions. Read more about the Noodl APIs ",(0,a.kt)("a",{parentName:"p",href:"/javascript/overview"},"here"),". Some of the functions and objects are labeled ",(0,a.kt)("strong",{parentName:"p"},"Only available on the frontend")," and some are labeled as ",(0,a.kt)("strong",{parentName:"p"},"Only available in cloud functions"),", the rest are shared between frontend and cloud functions."))),(0,a.kt)("h2",{id:"fetch"},"Fetch"),(0,a.kt)("p",null,"A subset of the ",(0,a.kt)("strong",{parentName:"p"},"Fetch API")," available on the browser also works in cloud functions, which is very useful for making HTTP requests to external services."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"fetch(url,options)")),(0,a.kt)("br",{parentName:"p"}),"\n","The ",(0,a.kt)("strong",{parentName:"p"},"Fetch API")," first takes the endpoint of the HTTP request and then an object with options. Here are a few examples, first making a simple POST request to an endpoint:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"const res = await fetch(\"https://some-endpoint\",{\n    method:'POST',\n    headers:{\n        'content-type':'application/json'\n    },\n    body:JSON.stringify({\n        someParameters:\"hello\"\n    })\n})\n\nif(res.ok) {\n    Outputs.Success()\n}\nelse Outputs.Failure()\n")),(0,a.kt)("h2",{id:"the-request-object"},"The Request Object"),(0,a.kt)("p",null,"In Javascript in your cloud functions you can access the request object containing data on the current request being handled."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"const request = Noodl.Objects.Request;\n\nrequest.UserId // Contains the user if of the user that called the cloud function, if authenticated\nrequest.Authenticated // Will be true if this call is authenticated\nrequest.Parameters // An object with the parameters of the current cloud function request\nrequest.Headers // An object with the HTTP headers of the current cloud function request\n")))}f.isMDXComponent=!0}}]);