"use strict";(self.webpackChunknew_noodl_docs=self.webpackChunknew_noodl_docs||[]).push([[5215],{3905:function(t,e,n){n.d(e,{Zo:function(){return s},kt:function(){return m}});var r=n(67294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function p(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var l=r.createContext({}),c=function(t){var e=r.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},s=function(t){var e=c(t.components);return r.createElement(l.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},u=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,o=t.originalType,l=t.parentName,s=p(t,["components","mdxType","originalType","parentName"]),u=c(n),m=a,h=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(h,i(i({ref:e},s),{},{components:n})):r.createElement(h,i({ref:e},s))}));function m(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=n.length,i=new Array(o);i[0]=u;var p={};for(var l in e)hasOwnProperty.call(e,l)&&(p[l]=e[l]);p.originalType=t,p.mdxType="string"==typeof t?t:a,i[1]=p;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},12333:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return p},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return s},default:function(){return u}});var r=n(87462),a=n(63366),o=(n(67294),n(3905)),i=["components"],p={},l=void 0,c={unversionedId:"component-utilities/parent-component-object",id:"component-utilities/parent-component-object",title:"parent-component-object",description:"Parent Component Object is always used in combination with a Component Object. A Parent Component Object will search upwards in the component tree until it finds a Component Object node and mirror that node. Any change being done to one node will be reflected in the other nodes. Multiple Parent Component Object nodes in the same component will always mirror the same Component Object.",source:"@site/nodes/component-utilities/parent-component-object.md",sourceDirName:"component-utilities",slug:"/component-utilities/parent-component-object",permalink:"/2.6/nodes/component-utilities/parent-component-object",tags:[],version:"current",frontMatter:{},sidebar:"nodesSidebar",previous:{title:"component-object",permalink:"/2.6/nodes/component-utilities/component-object"},next:{title:"set-component-object-properties",permalink:"/2.6/nodes/component-utilities/set-component-object-properties"}},s=[{value:"Inputs",id:"inputs",children:[{value:"Properties",id:"properties",children:[],level:3}],level:2},{value:"Outputs",id:"outputs",children:[{value:"Properties",id:"properties-1",children:[],level:3}],level:2}],d={toc:s};function u(t){var e=t.components,p=(0,a.Z)(t,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,p,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,""),(0,o.kt)("h1",{id:"parent-component-object"},"Parent Component Object"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Parent Component Object")," is always used in combination with a ",(0,o.kt)("a",{parentName:"p",href:"/nodes/component-utilities/component-object"},"Component Object"),". A ",(0,o.kt)("strong",{parentName:"p"},"Parent Component Object")," will search upwards in the component tree until it finds a ",(0,o.kt)("strong",{parentName:"p"},"Component Object")," node and mirror that node. Any change being done to one node will be reflected in the other nodes. Multiple ",(0,o.kt)("strong",{parentName:"p"},"Parent Component Object")," nodes in the same component will always mirror the same ",(0,o.kt)("strong",{parentName:"p"},"Component Object"),"."),(0,o.kt)("div",{class:"ndl-image-with-background"},(0,o.kt)("p",null,(0,o.kt)("img",{src:n(65438).Z,width:"702",height:"374"}))),(0,o.kt)("p",null,"The node is used much like an ",(0,o.kt)("a",{parentName:"p",href:"/nodes/data/object/object.md"},"Object")," where you can output properties on the node. The node does not have an ",(0,o.kt)("strong",{parentName:"p"},"Id")," instead the data is shared with the parent component. This node is very useful in patterns such as radio groups where child components may need to access the ",(0,o.kt)("strong",{parentName:"p"},"Component Object")," of its parent.\n"),(0,o.kt)("h2",{id:"inputs"},"Inputs"),(0,o.kt)("h3",{id:"properties"},"Properties"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Data"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("span",{class:"ndl-data"},"Properties")),(0,o.kt)("td",{parentName:"tr",align:null},"<##input:value-","*","##>The properties to set on the closest parent ",(0,o.kt)("a",{parentName:"td",href:"/nodes/component-utilities/component-object"},"Component Object"),". When this input is changed via a connection the parent ",(0,o.kt)("strong",{parentName:"td"},"Component Object")," will be updated.")))),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Signal"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("span",{class:"ndl-signal"},"Fetch")),(0,o.kt)("td",{parentName:"tr",align:null},"Normally when a ",(0,o.kt)("strong",{parentName:"td"},"Parent Component State")," is created, the property outputs are immediately updated. If you want to control how the data is updated you can connect to the ",(0,o.kt)("em",{parentName:"td"},"Fetch")," signal input. Then you need to explictly send a signal to fetch the data.",(0,o.kt)("br",null),(0,o.kt)("br",null),"With ",(0,o.kt)("strong",{parentName:"td"},"Fetch")," connected the output data won't change until ",(0,o.kt)("strong",{parentName:"td"},"Fetch")," is explicitly triggered again.")))),(0,o.kt)("h2",{id:"outputs"},"Outputs"),(0,o.kt)("h3",{id:"properties-1"},"Properties"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Data"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("span",{class:"ndl-data"},"Parent Properties")),(0,o.kt)("td",{parentName:"tr",align:null},"<##output:value-","*","##>The values of the properties of the closest parent ",(0,o.kt)("a",{parentName:"td",href:"/nodes/component-utilities/component-object"},"Component Object"),".")))),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Signal"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("span",{class:"ndl-signal"},"Changed")),(0,o.kt)("td",{parentName:"tr",align:null},"This event is triggered when any of the properties have changed.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("span",{class:"ndl-signal"},"Fetched")),(0,o.kt)("td",{parentName:"tr",align:null},"Signal when this node has bound itself to a ",(0,o.kt)("a",{parentName:"td",href:"/nodes/component-utilities/component-object"},"Component Object"),". Triggers immediately if the ",(0,o.kt)("strong",{parentName:"td"},"Fetch")," inputs isn't connected, and will otherwise trigger when the ",(0,o.kt)("strong",{parentName:"td"},"Fetch")," input is signaled.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("span",{class:"ndl-signal"},"Changed Property Signals")),(0,o.kt)("td",{parentName:"tr",align:null},"<##output:changed-","*","##>One changed signal output will be created for every property. They will emit a signal when the property changes value.")))))}u.isMDXComponent=!0},65438:function(t,e,n){e.Z=n.p+"assets/images/parent-component-object-6155ae11c9d50c1dd58ce1b2574cbf61.png"}}]);