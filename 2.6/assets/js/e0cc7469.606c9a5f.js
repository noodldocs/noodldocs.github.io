"use strict";(self.webpackChunknew_noodl_docs=self.webpackChunknew_noodl_docs||[]).push([[3172],{3905:function(e,t,a){a.d(t,{Zo:function(){return d},kt:function(){return h}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=p(a),h=r,m=c["".concat(s,".").concat(h)]||c[h]||u[h]||l;return a?n.createElement(m,i(i({ref:t},d),{},{components:a})):n.createElement(m,i({ref:t},d))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},3696:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return d},default:function(){return c}});var n=a(7462),r=a(3366),l=(a(7294),a(3905)),i=["components"],o={},s=void 0,p={unversionedId:"data/variable/variable",id:"data/variable/variable",title:"variable",description:"Use this node to store a single data variable that will be globally accessible throughout the application. Variable works in a similar way as Object but can only store one value.",source:"@site/nodes/data/variable/variable.md",sourceDirName:"data/variable",slug:"/data/variable/",permalink:"/2.5/nodes/data/variable/",tags:[],version:"current",frontMatter:{},sidebar:"nodesSidebar",previous:{title:"set-variable",permalink:"/2.5/nodes/data/variable/set-variable"},next:{title:"array",permalink:"/2.5/nodes/data/array/"}},d=[{value:"Storing a value",id:"storing-a-value",children:[],level:2},{value:"Use a stored value",id:"use-a-stored-value",children:[],level:2},{value:"Inputs",id:"inputs",children:[],level:2},{value:"Outputs",id:"outputs",children:[],level:2}],u={toc:d};function c(e){var t=e.components,o=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,n.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,""),(0,l.kt)("h1",{id:"variable"},"Variable"),(0,l.kt)("p",null,"Use this node to store a single data variable that will be globally accessible throughout the application. ",(0,l.kt)("strong",{parentName:"p"},"Variable")," works in a similar way as ",(0,l.kt)("a",{parentName:"p",href:"/nodes/data/object/object.md"},"Object")," but can only store one value."),(0,l.kt)("div",{class:"ndl-image-with-background l"},(0,l.kt)("p",null,(0,l.kt)("img",{src:a(3776).Z,width:"936",height:"592"}))),(0,l.kt)("p",null,"The value can be dynamically stored, either by passing it a new value or by sending ",(0,l.kt)("span",{class:"ndl-signal"},"signals")," to the ",(0,l.kt)("span",{class:"ndl-node"},(0,l.kt)("a",{parentName:"p",href:"/nodes/data/variable/set-variable"},"Set Variable"))," node."),(0,l.kt)("p",null,""),(0,l.kt)("h2",{id:"storing-a-value"},"Storing a value"),(0,l.kt)("p",null,"Give the Variable a name with the ",(0,l.kt)("strong",{parentName:"p"},"Name")," input and simply connect to ",(0,l.kt)("strong",{parentName:"p"},"Value"),", whenever the input connection is updated the value will be stored in the variable. You can also use the ",(0,l.kt)("a",{parentName:"p",href:"/nodes/data/variable/set-variable"},"Set Variable")," node to update tha value of a ",(0,l.kt)("strong",{parentName:"p"},"Variable"),". In this case, you control when the value is stored by sending a signal to the ",(0,l.kt)("span",{class:"ndl-signal"},"Do")," action."),(0,l.kt)("h2",{id:"use-a-stored-value"},"Use a stored value"),(0,l.kt)("p",null,"When a value is stored in a variable you can use it somewhere else in your application simply be creating a new node and giving it the same ",(0,l.kt)("strong",{parentName:"p"},"Name")," and connecting the ",(0,l.kt)("strong",{parentName:"p"},"Value")," property."),(0,l.kt)("h2",{id:"inputs"},"Inputs"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Data"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("span",{class:"ndl-data"},"Name")),(0,l.kt)("td",{parentName:"tr",align:null},"The name of the ",(0,l.kt)("strong",{parentName:"td"},"Variable"),". All ",(0,l.kt)("strong",{parentName:"td"},"Variable")," nodes with the same name will share the same data.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("span",{class:"ndl-data"},"Value")),(0,l.kt)("td",{parentName:"tr",align:null},"The value that you want the ",(0,l.kt)("strong",{parentName:"td"},"Variable")," to get. You will connect your data to this input. The value of the ",(0,l.kt)("strong",{parentName:"td"},"Variable")," will change when the data changes. If you want to control more precisely when the value should be updated, you should use the ",(0,l.kt)("a",{parentName:"td",href:"/nodes/data/variable/set-variable"},"Set Variable")," node.")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Signal"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("span",{class:"ndl-signal"},"Fetch")),(0,l.kt)("td",{parentName:"tr",align:null},"Normally the value output of the node is updated once the ",(0,l.kt)("strong",{parentName:"td"},"Name")," input is set and if there is a change in the data from somewhere in the graph. However, if this signal has a connection it will wait until it gets a signal on ",(0,l.kt)("strong",{parentName:"td"},"Fetch")," before it updates.")))),(0,l.kt)("h2",{id:"outputs"},"Outputs"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Data"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("span",{class:"ndl-data"},"Value")),(0,l.kt)("td",{parentName:"tr",align:null},"The current value of this ",(0,l.kt)("strong",{parentName:"td"},"Variable")," node.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("span",{class:"ndl-data"},"Name")),(0,l.kt)("td",{parentName:"tr",align:null},"The name of the ",(0,l.kt)("strong",{parentName:"td"},"Variable"),".")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Signal"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("span",{class:"ndl-signal"},"Changed")),(0,l.kt)("td",{parentName:"tr",align:null},"This signal is sent when the ",(0,l.kt)("strong",{parentName:"td"},"Value")," of this ",(0,l.kt)("strong",{parentName:"td"},"Variable")," has changed. Note: The signal triggers when any ",(0,l.kt)("strong",{parentName:"td"},"Variable")," with the same ",(0,l.kt)("strong",{parentName:"td"},"Name")," is changed, i.e. it triggers when the underlying data has changed.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("span",{class:"ndl-signal"},"Fetched")),(0,l.kt)("td",{parentName:"tr",align:null},"Signal when the data of this ",(0,l.kt)("strong",{parentName:"td"},"Variable")," node has been fetched and updated, either as a response to the ",(0,l.kt)("strong",{parentName:"td"},"Fetch")," input signal (when it has completed and the output ",(0,l.kt)("strong",{parentName:"td"},"Value")," is updated), or when the ",(0,l.kt)("strong",{parentName:"td"},"Name")," of the variable have changed.")))))}c.isMDXComponent=!0},3776:function(e,t,a){t.Z=a.p+"assets/images/variable-1-893ac1bc391a8c5e5b2512437fc462a1.png"}}]);