"use strict";(self.webpackChunknoodl_docs=self.webpackChunknoodl_docs||[]).push([[1233],{3905:(t,e,n)=>{n.d(e,{Zo:()=>c,kt:()=>h});var o=n(67294);function l(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,o)}return n}function r(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){l(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function a(t,e){if(null==t)return{};var n,o,l=function(t,e){if(null==t)return{};var n,o,l={},i=Object.keys(t);for(o=0;o<i.length;o++)n=i[o],e.indexOf(n)>=0||(l[n]=t[n]);return l}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(o=0;o<i.length;o++)n=i[o],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(l[n]=t[n])}return l}var s=o.createContext({}),p=function(t){var e=o.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):r(r({},e),t)),n},c=function(t){var e=p(t.components);return o.createElement(s.Provider,{value:e},t.children)},d="mdxType",m={inlineCode:"code",wrapper:function(t){var e=t.children;return o.createElement(o.Fragment,{},e)}},u=o.forwardRef((function(t,e){var n=t.components,l=t.mdxType,i=t.originalType,s=t.parentName,c=a(t,["components","mdxType","originalType","parentName"]),d=p(n),u=l,h=d["".concat(s,".").concat(u)]||d[u]||m[u]||i;return n?o.createElement(h,r(r({ref:e},c),{},{components:n})):o.createElement(h,r({ref:e},c))}));function h(t,e){var n=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var i=n.length,r=new Array(i);r[0]=u;var a={};for(var s in e)hasOwnProperty.call(e,s)&&(a[s]=e[s]);a.originalType=t,a[d]="string"==typeof t?t:l,r[1]=a;for(var p=2;p<i;p++)r[p]=n[p];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},42172:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>r,default:()=>m,frontMatter:()=>i,metadata:()=>a,toc:()=>p});var o=n(87462),l=(n(67294),n(3905));const i={title:"Custom Tooltip",hide_title:!0},r="Custom Tooltip",a={unversionedId:"modules/chartjs/examples/custom-tooltip/README",id:"modules/chartjs/examples/custom-tooltip/README",title:"Custom Tooltip",description:"There are some known timing problems when setting Plugins Object,",source:"@site/library/modules/chartjs/examples/custom-tooltip/README.md",sourceDirName:"modules/chartjs/examples/custom-tooltip",slug:"/modules/chartjs/examples/custom-tooltip/",permalink:"/2.9/library/modules/chartjs/examples/custom-tooltip/",draft:!1,tags:[],version:"current",frontMatter:{title:"Custom Tooltip",hide_title:!0},sidebar:"chartjsSidebar",previous:{title:"Scatter Chart | Chart.js Module",permalink:"/2.9/library/modules/chartjs/charts/scatter"},next:{title:"Chart.js Interactions",permalink:"/2.9/library/modules/chartjs/guides/interactions"}},s={},p=[{value:"Custom Tooltip Content",id:"custom-tooltip-content",level:2},{value:"External HTML Tooltip",id:"external-html-tooltip",level:2},{value:"Only show titles",id:"only-show-titles",level:3}],c={toc:p},d="wrapper";function m(t){let{components:e,...i}=t;return(0,l.kt)(d,(0,o.Z)({},c,i,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"custom-tooltip"},"Custom Tooltip"),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"There are some known timing problems when setting ",(0,l.kt)("inlineCode",{parentName:"p"},"Plugins Object"),",\nsolution is to set the ",(0,l.kt)("inlineCode",{parentName:"p"},"Plugins Object")," on ",(0,l.kt)("inlineCode",{parentName:"p"},"Did Mount"),".")),(0,l.kt)("h2",{id:"custom-tooltip-content"},"Custom Tooltip Content"),(0,l.kt)("p",null,"This sample shows how to use the tooltip callbacks to add additional content to the tooltip.\n",(0,l.kt)("a",{parentName:"p",href:"https://www.chartjs.org/docs/3.6.0/samples/tooltip/content.html"},"Chart.js Example")),(0,l.kt)("div",{className:"ndl-image-with-background l"},(0,l.kt)("p",null,(0,l.kt)("img",{src:n(16856).Z,width:"678",height:"303"}))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'Outputs.Plugins = {\n  tooltip: {\n    callbacks: {\n      footer: (tooltipItems) => {\n        let sum = 0;\n\n        tooltipItems.forEach(function (tooltipItem) {\n          sum += tooltipItem.parsed.y;\n        });\n        return "Sum: " + sum;\n      },\n    },\n  },\n};\n')),(0,l.kt)("h2",{id:"external-html-tooltip"},"External HTML Tooltip"),(0,l.kt)("p",null,"This sample shows how to use the external tooltip functionality to generate an HTML tooltip.\n",(0,l.kt)("a",{parentName:"p",href:"https://www.chartjs.org/docs/3.6.0/samples/tooltip/html.html"},"Chart.js Example")),(0,l.kt)("div",{className:"ndl-image-with-background l"},(0,l.kt)("p",null,(0,l.kt)("img",{src:n(16856).Z,width:"678",height:"303"}))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'const getOrCreateTooltip = (chart) => {\n  let tooltipEl = chart.canvas.parentNode.querySelector("div");\n\n  if (!tooltipEl) {\n    tooltipEl = document.createElement("div");\n    tooltipEl.style.background = "rgba(0, 0, 0, 0.7)";\n    tooltipEl.style.borderRadius = "3px";\n    tooltipEl.style.color = "white";\n    tooltipEl.style.opacity = 1;\n    tooltipEl.style.pointerEvents = "none";\n    tooltipEl.style.position = "absolute";\n    tooltipEl.style.transform = "translate(-50%, 0)";\n    tooltipEl.style.transition = "all .1s ease";\n\n    const table = document.createElement("table");\n    table.style.margin = "0px";\n\n    tooltipEl.appendChild(table);\n    chart.canvas.parentNode.appendChild(tooltipEl);\n  }\n\n  return tooltipEl;\n};\n\nconst externalTooltipHandler = (context) => {\n  // Tooltip Element\n  const { chart, tooltip } = context;\n  const tooltipEl = getOrCreateTooltip(chart);\n\n  // Hide if no tooltip\n  if (tooltip.opacity === 0) {\n    tooltipEl.style.opacity = 0;\n    return;\n  }\n\n  // Set Text\n  if (tooltip.body) {\n    const titleLines = tooltip.title || [];\n    const bodyLines = tooltip.body.map((b) => b.lines);\n\n    const tableHead = document.createElement("thead");\n\n    titleLines.forEach((title) => {\n      const tr = document.createElement("tr");\n      tr.style.borderWidth = 0;\n\n      const th = document.createElement("th");\n      th.style.borderWidth = 0;\n      const text = document.createTextNode(title);\n\n      th.appendChild(text);\n      tr.appendChild(th);\n      tableHead.appendChild(tr);\n    });\n\n    const tableBody = document.createElement("tbody");\n    bodyLines.forEach((body, i) => {\n      const colors = tooltip.labelColors[i];\n\n      const span = document.createElement("span");\n      span.style.background = colors.backgroundColor;\n      span.style.borderColor = colors.borderColor;\n      span.style.borderWidth = "2px";\n      span.style.marginRight = "10px";\n      span.style.height = "10px";\n      span.style.width = "10px";\n      span.style.display = "inline-block";\n\n      const tr = document.createElement("tr");\n      tr.style.backgroundColor = "inherit";\n      tr.style.borderWidth = 0;\n\n      const td = document.createElement("td");\n      td.style.borderWidth = 0;\n\n      const text = document.createTextNode(body);\n\n      td.appendChild(span);\n      td.appendChild(text);\n      tr.appendChild(td);\n      tableBody.appendChild(tr);\n    });\n\n    const tableRoot = tooltipEl.querySelector("table");\n\n    // Remove old children\n    while (tableRoot.firstChild) {\n      tableRoot.firstChild.remove();\n    }\n\n    // Add new children\n    tableRoot.appendChild(tableHead);\n    tableRoot.appendChild(tableBody);\n  }\n\n  const { offsetLeft: positionX, offsetTop: positionY } = chart.canvas;\n\n  // Display, position, and set styles for font\n  tooltipEl.style.opacity = 1;\n  tooltipEl.style.left = positionX + tooltip.caretX + "px";\n  tooltipEl.style.top = positionY + tooltip.caretY + "px";\n  tooltipEl.style.font = tooltip.options.bodyFont.string;\n  tooltipEl.style.padding =\n    tooltip.options.padding + "px " + tooltip.options.padding + "px";\n};\n\nOutputs.Plugins = {\n  tooltip: {\n    enabled: false,\n    position: "nearest",\n    external: externalTooltipHandler,\n  },\n};\n')),(0,l.kt)("h3",{id:"only-show-titles"},"Only show titles"),(0,l.kt)("p",null,"For this we just change the code to only return the titles."),(0,l.kt)("div",{className:"ndl-image-with-background l"},(0,l.kt)("p",null,(0,l.kt)("img",{src:n(90076).Z,width:"906",height:"464"}))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'const getOrCreateTooltip = (chart) => {\n  let tooltipEl = chart.canvas.parentNode.querySelector("div");\n\n  if (!tooltipEl) {\n    tooltipEl = document.createElement("div");\n    tooltipEl.style.background = "rgba(0, 0, 0, 0.7)";\n    tooltipEl.style.borderRadius = "3px";\n    tooltipEl.style.color = "white";\n    tooltipEl.style.opacity = 1;\n    tooltipEl.style.pointerEvents = "none";\n    tooltipEl.style.position = "absolute";\n    tooltipEl.style.transform = "translate(-50%, 0)";\n    tooltipEl.style.transition = "all .1s ease";\n\n    const table = document.createElement("table");\n    table.style.margin = "0px";\n\n    tooltipEl.appendChild(table);\n    chart.canvas.parentNode.appendChild(tooltipEl);\n  }\n\n  return tooltipEl;\n};\n\nconst externalTooltipHandler = (context) => {\n  // Tooltip Element\n  const { chart, tooltip } = context;\n  const tooltipEl = getOrCreateTooltip(chart);\n\n  // Hide if no tooltip\n  if (tooltip.opacity === 0) {\n    tooltipEl.style.opacity = 0;\n    return;\n  }\n\n  // Set Text\n  if (tooltip.body) {\n    const titleLines = tooltip.title || [];\n    const bodyLines = tooltip.body.map((b) => b.lines);\n\n    const tableHead = document.createElement("thead");\n\n    titleLines.forEach((title) => {\n      const tr = document.createElement("tr");\n      tr.style.borderWidth = 0;\n\n      const th = document.createElement("th");\n      th.style.borderWidth = 0;\n      const text = document.createTextNode(title);\n\n      th.appendChild(text);\n      tr.appendChild(th);\n      tableHead.appendChild(tr);\n    });\n\n    const tableRoot = tooltipEl.querySelector("table");\n\n    // Remove old children\n    while (tableRoot.firstChild) {\n      tableRoot.firstChild.remove();\n    }\n\n    // Add new children\n    tableRoot.appendChild(tableHead);\n  }\n\n  const { offsetLeft: positionX, offsetTop: positionY } = chart.canvas;\n\n  // Display, position, and set styles for font\n  tooltipEl.style.opacity = 1;\n  tooltipEl.style.left = positionX + tooltip.caretX + "px";\n  tooltipEl.style.top = positionY + tooltip.caretY + "px";\n  tooltipEl.style.font = tooltip.options.bodyFont.string;\n  tooltipEl.style.padding =\n    tooltip.options.padding + "px " + tooltip.options.padding + "px";\n};\n\nOutputs.Plugins = {\n  tooltip: {\n    enabled: false,\n    position: "nearest",\n    external: externalTooltipHandler,\n  },\n};\n')))}m.isMDXComponent=!0},16856:(t,e,n)=>{n.d(e,{Z:()=>o});const o=n.p+"assets/images/custom-tooltip-content-8e5bad8eb424faad075392fc54b14926.png"},90076:(t,e,n)=>{n.d(e,{Z:()=>o});const o=n.p+"assets/images/only-show-titles-chart-32b5cd66dccaceee4059777d200589db.png"}}]);