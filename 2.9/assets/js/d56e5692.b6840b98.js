"use strict";(self.webpackChunknoodl_docs=self.webpackChunknoodl_docs||[]).push([[3942],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return h}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),i=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=i(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),d=i(n),h=a,b=d["".concat(l,".").concat(h)]||d[h]||c[h]||s;return n?r.createElement(b,o(o({ref:t},p),{},{components:n})):r.createElement(b,o({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=d;var u={};for(var l in t)hasOwnProperty.call(t,l)&&(u[l]=t[l]);u.originalType=e,u.mdxType="string"==typeof e?e:a,o[1]=u;for(var i=2;i<s;i++)o[i]=n[i];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},27711:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return h},frontMatter:function(){return u},metadata:function(){return i},toc:function(){return c}});var r=n(83117),a=n(80102),s=(n(67294),n(3905)),o=["components"],u={title:"Fetch Current User Auth",hide_title:!0},l="Fetch Current User Auth",i={unversionedId:"prefabs/supabase/components/supabase-fetch-current-user-auth/README",id:"prefabs/supabase/components/supabase-fetch-current-user-auth/README",title:"Fetch Current User Auth",description:"This component is used to send a request to Supabase and retrieve all authorisation data on the currently logged in user. After a success it updates the auth, session and loggedIn properties on the Noodl object with the id currentUser.",source:"@site/library/prefabs/supabase/components/supabase-fetch-current-user-auth/README.md",sourceDirName:"prefabs/supabase/components/supabase-fetch-current-user-auth",slug:"/prefabs/supabase/components/supabase-fetch-current-user-auth/",permalink:"/2.9/library/prefabs/supabase/components/supabase-fetch-current-user-auth/",tags:[],version:"current",frontMatter:{title:"Fetch Current User Auth",hide_title:!0},sidebar:"SupabaseSidebar",previous:{title:"Resend Confirmation",permalink:"/2.9/library/prefabs/supabase/components/supabase-resend-confirmation/"},next:{title:"Fetch Current User Profile Data",permalink:"/2.9/library/prefabs/supabase/components/supabase-fetch-current-user-profile-data/"}},p={},c=[{value:"Inputs",id:"inputs",level:2},{value:"Outputs",id:"outputs",level:2}],d={toc:c};function h(e){var t=e.components,u=(0,a.Z)(e,o);return(0,s.kt)("wrapper",(0,r.Z)({},d,u,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"fetch-current-user-auth"},"Fetch Current User Auth"),(0,s.kt)("p",null,"This component is used to send a request to Supabase and retrieve all authorisation data on the currently logged in user. After a success it updates the ",(0,s.kt)("inlineCode",{parentName:"p"},"auth"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"session")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"loggedIn")," properties on the Noodl object with the id ",(0,s.kt)("inlineCode",{parentName:"p"},"currentUser"),"."),(0,s.kt)("div",{className:"ndl-image-with-background"},(0,s.kt)("p",null,(0,s.kt)("img",{src:n(87322).Z,width:"620",height:"330"}))),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"Please note that ",(0,s.kt)("a",{parentName:"p",href:"/library/prefabs/supabase/components/setup-client/"},"Supabase Client")," needs to be set up in your app before you can properly use this component.")),(0,s.kt)("h2",{id:"inputs"},"Inputs"),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null},"Signals"),(0,s.kt)("th",{parentName:"tr",align:null},"Description"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("span",{className:"ndl-signal"},"Do")),(0,s.kt)("td",{parentName:"tr",align:null},"Triggers the fetch request call.")))),(0,s.kt)("h2",{id:"outputs"},"Outputs"),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null},"Data"),(0,s.kt)("th",{parentName:"tr",align:null},"Description"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("span",{className:"ndl-data"},"Logged In")),(0,s.kt)("td",{parentName:"tr",align:null},"A boolean that holds the users current login state.")))),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null},"Signals"),(0,s.kt)("th",{parentName:"tr",align:null},"Description"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("span",{className:"ndl-signal"},"Done")),(0,s.kt)("td",{parentName:"tr",align:null},"Sends a signal when the request has finished.")))))}h.isMDXComponent=!0},87322:function(e,t,n){t.Z=n.p+"assets/images/fetchauth-89933fb013ec80e62209a98016795c2b.png"}}]);