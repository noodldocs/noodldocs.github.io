"use strict";(self.webpackChunknoodl_docs=self.webpackChunknoodl_docs||[]).push([[2916],{3905:function(e,n,t){t.d(n,{Zo:function(){return i},kt:function(){return f}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function u(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):u(u({},n),e)),t},i=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,i=c(e,["components","mdxType","originalType","parentName"]),d=p(t),f=o,m=d["".concat(l,".").concat(f)]||d[f]||s[f]||a;return t?r.createElement(m,u(u({ref:n},i),{},{components:t})):r.createElement(m,u({ref:n},i))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,u=new Array(a);u[0]=d;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,u[1]=c;for(var p=2;p<a;p++)u[p]=t[p];return r.createElement.apply(null,u)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},2676:function(e,n,t){t.r(n),t.d(n,{assets:function(){return i},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return s}});var r=t(83117),o=t(80102),a=(t(67294),t(3905)),u=["components"],c={},l=void 0,p={unversionedId:"modules/mapbox/guides/polygon",id:"modules/mapbox/guides/polygon",title:"polygon",description:"WIP, would be nice to work with the nodes.",source:"@site/library/modules/mapbox/guides/polygon.md",sourceDirName:"modules/mapbox/guides",slug:"/modules/mapbox/guides/polygon",permalink:"/2.9/library/modules/mapbox/guides/polygon",tags:[],version:"current",frontMatter:{}},i={},s=[],d={toc:s};function f(e){var n=e.components,t=(0,o.Z)(e,u);return(0,a.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"WIP, would be nice to work with the nodes."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const mapbox = Inputs.MapboxObject;\nconst draw = new MapboxDraw({\n  displayControlsDefault: false,\n  // Select which mapbox-gl-draw control buttons to add to the map.\n  controls: {\n    polygon: true,\n    trash: true\n  },\n  // Set mapbox-gl-draw to draw by default.\n  // The user does not have to click the polygon control button first.\n  defaultMode: 'draw_polygon'\n});\nmapbox.addControl(draw);\n\n\nfunction updateArea(e) {\n  const geometry = e.features[0].geometry;\n  Outputs.Geometry = JSON.parse(JSON.stringify(geometry));\n  Outputs.Coordinates = geometry.coordinates;\n\n  // const data = draw.getAll();\n  // const answer = document.getElementById('calculated-area') = Outputs.calculatedarea;\n  // if (data.features.length > 0) {\n  //   const area = turf.area(data);\n  //   // Restrict the area to 2 decimal points.\n  //   const rounded_area = Math.round(area * 100) / 100;\n  //   answer.innerHTML = `<p><strong>${rounded_area}</strong></p><p>square meters</p>`;\n  // } else {\n  //   answer.innerHTML = '';\n  //   if (e.type !== 'draw.delete')\n  //     alert('Click the map to draw a polygon.');\n  // }\n}\n\nmapbox.on('draw.create', updateArea);\nmapbox.on('draw.delete', updateArea);\nmapbox.on('draw.update', updateArea);\n\n// Add keydown event listener to the mapbox container\nmapbox.getCanvas().addEventListener('keydown', (event) => {\n  if (event.keyCode === 13 || event.keyCode === 3) { // 13 is the keycode for the Enter key\n    draw.changeMode('simple_select');\n  }\n});\n")))}f.isMDXComponent=!0}}]);