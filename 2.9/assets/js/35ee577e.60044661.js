"use strict";(self.webpackChunknoodl_docs=self.webpackChunknoodl_docs||[]).push([[7],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,h=d["".concat(s,".").concat(m)]||d[m]||u[m]||i;return n?r.createElement(h,o(o({ref:t},c),{},{components:n})):r.createElement(h,o({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},72141:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const i={title:"Create a build script",hide_title:!0},o=void 0,l={unversionedId:"extending/build-script/overview",id:"extending/build-script/overview",title:"Create a build script",description:"Noodl has a way where you can hook into the different build events that",source:"@site/javascript/extending/build-script/overview.md",sourceDirName:"extending/build-script",slug:"/extending/build-script/overview",permalink:"/2.9/javascript/extending/build-script/overview",draft:!1,tags:[],version:"current",frontMatter:{title:"Create a build script",hide_title:!0}},s={},p=[{value:"Where to use it?",id:"where-to-use-it",level:3},{value:"Create a build script",id:"create-a-build-script",level:2},{value:"Example",id:"example",level:3},{value:"What is Context?",id:"what-is-context",level:2},{value:"General",id:"general",level:3}],c={toc:p},d="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("head",null,(0,a.kt)("meta",{name:"robots",content:"noindex,nofollow,noarchive"})),(0,a.kt)("h1",{id:"build-scripts"},"Build scripts"),(0,a.kt)("p",null,"Noodl has a way where you can hook into the different build events that\nare triggered from the editor."),(0,a.kt)("admonition",{type:"danger"},(0,a.kt)("p",{parentName:"admonition"},"This is an experimental feature, that might be changed in the future.")),(0,a.kt)("h3",{id:"where-to-use-it"},"Where to use it?"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/javascript/extending/build-script/sitemap-and-seo"},"Generate a Sitemap and static pages")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/javascript/extending/build-script/change-nodes-at-build-time"},"Change nodes at build time"))),(0,a.kt)("h2",{id:"create-a-build-script"},"Create a build script"),(0,a.kt)("p",null,"To add a build script it has to be placed inside a folder in the project.\nAs long as the file ends with ",(0,a.kt)("inlineCode",{parentName:"p"},".build.js")," it will be picked up by Noodl."),(0,a.kt)("p",null,"The execution order of the build scripts are based on alphabetical order."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"my-noodl-project/\n    .noodl/\n        build-scripts/\n            [HERE]\n")),(0,a.kt)("h3",{id:"example"},"Example"),(0,a.kt)("p",null,"Here is an example of what kind of events you can listen to:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"module.exports = {\n  async onPreBuild(context) {\n    // Occurs before the build.\n  },\n  async onPostBuild(context) {\n    // Occurs after the build.\n  },\n  async onPreDeploy(context) {\n    // Occurs before the build is deployed.\n  },\n  async onPostDeploy(context) {\n    // Occurs after the build is deployed.\n  },\n};\n")),(0,a.kt)("h2",{id:"what-is-context"},"What is Context?"),(0,a.kt)("p",null,"Context is a little different in each method,\nbut generally have the same methods."),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"More documentation to come later!")),(0,a.kt)("h3",{id:"general"},"General"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"workspaceId: string;\n\nproject: ProjectModel;\n\nenvironment: {\n  name: string;\n  description: string;\n  masterKey: string;\n  appId: string;\n} | undefined;\n\n/**\n *\n * @param options\n * @param callback\n */\nactivity(options: { message: string; successMessage?: string; }, callback: () => Promise<void>): Promise<void>;\n\n/**\n *\n * @param type\n * @param message\n */\nnotify(type: 'notice' | 'success' | 'error', message: string): void;\n\n/**\n * Returns a list of all the pages with absolute paths.\n *\n * @returns [\n *    {\n *      title: \"page title\",\n *      path: \"/path-1/path-2\",\n *      meta: {}\n *    },\n *    // ...\n *  ]\n */\ngetPages(options: {\n  expandPaths?: (route: RouteNode) => Promise<string[]>;\n}): Promise<readonly PageObject[]>;\n\n/**\n * Create a index.html page similar to the one created for the web app.\n *\n * @returns a string containg the HTML code.\n */\ncreateIndexPage(options: {\n  /**\n   * Override the title from project settings.\n   *\n   * Default: undefined\n   */\n  title?: string;\n\n  /**\n   * Append the headcode from the project settings.\n   *\n   * Default: undefined\n   */\n  headCode?: string;\n}): Promise<string>;\n\n/**\n * Returns a traversal graph of the nodes.\n *\n * @param selector\n * @returns\n */\ngraphTraverse(\n  selector: (node: NodeGraphModel.Node) => boolean,\n  options: NodeGraphTraverserOptions\n): NodeGraphTraverser;\n")))}u.isMDXComponent=!0}}]);