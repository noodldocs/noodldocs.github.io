"use strict";(self.webpackChunknoodl_docs=self.webpackChunknoodl_docs||[]).push([[6934],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>g});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),c=p(n),u=r,g=c["".concat(l,".").concat(u)]||c[u]||m[u]||s;return n?a.createElement(g,o(o({ref:t},d),{},{components:n})):a.createElement(g,o({ref:t},d))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,o=new Array(s);o[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[c]="string"==typeof e?e:r,o[1]=i;for(var p=2;p<s;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4572:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>s,metadata:()=>i,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const s={title:"Send Message",hide_title:!0},o=void 0,i={unversionedId:"modules/mqtt/send-message",id:"modules/mqtt/send-message",title:"Send Message",description:"Send Message nodes are used to send a message over MQTT, to another device for example. All devices that connect to the editor will",source:"@site/library/modules/mqtt/send-message.md",sourceDirName:"modules/mqtt",slug:"/modules/mqtt/send-message",permalink:"/2.9/library/modules/mqtt/send-message",draft:!1,tags:[],version:"current",frontMatter:{title:"Send Message",hide_title:!0},sidebar:"mqttSidebar",previous:{title:"MQTT Guide",permalink:"/2.9/library/modules/mqtt/mqtt-guide"},next:{title:"Receive Message",permalink:"/2.9/library/modules/mqtt/receive-message"}},l={},p=[{value:"Inputs",id:"inputs",level:2},{value:"General",id:"general",level:3},{value:"PAYLOAD",id:"payload",level:3},{value:"RATE LIMIT",id:"rate-limit",level:3},{value:"Outputs",id:"outputs",level:2}],d={toc:p},c="wrapper";function m(e){let{components:t,...s}=e;return(0,r.kt)(c,(0,a.Z)({},d,s,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,""),(0,r.kt)("h1",{id:"send-message"},"Send Message"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Send Message")," nodes are used to send a message over MQTT, to another device for example. All devices that connect to the editor will\nuse the same MQTT broker and thus messages can be sent across devices. The ",(0,r.kt)("strong",{parentName:"p"},"Send Message")," node uses topics to specify which receivers should get the messages."),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(54556).Z,width:"500",height:"270"})),(0,r.kt)("p",null,""),(0,r.kt)("div",{class:"node-inputs"},(0,r.kt)("h2",{id:"inputs"},"Inputs"),(0,r.kt)("h3",{id:"general"},"General"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Topic"),(0,r.kt)("br",{parentName:"p"}),"\n","The MQTT topic this ",(0,r.kt)("strong",{parentName:"p"},"Send Message")," will publish messages to. Most commonly the topics are specified as a hierarchy with ",(0,r.kt)("strong",{parentName:"p"},"/")," as delimiters, e.g. ",(0,r.kt)("em",{parentName:"p"},"/Foo/Bar/1"),". Sometimes the topic needs to be dynamic, this can be achieved by encapsulating a topic component with curly brackets, e.g. ",(0,r.kt)("em",{parentName:"p"},"/Foo/{Bar}/1"),". In this case a port called ",(0,r.kt)("em",{parentName:"p"},"Bar")," will show up."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Format"),"\nThis input sets the format the payload will be sent in, either as JSON or as a CSV."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Send on Change"),"\nThis boolean controls whether a new message will be sent automatically when any payload input changes, or if you have to explicitly trigger the ",(0,r.kt)("em",{parentName:"p"},"Send")," signal to send the message."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Send"),(0,r.kt)("br",{parentName:"p"}),"\n","This is a signal port and when triggered the corresponding ",(0,r.kt)("strong",{parentName:"p"},"Receive Message")," nodes will be triggered as well."),(0,r.kt)("h3",{id:"payload"},"PAYLOAD"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Send Message")," nodes can have arbitrary input ports that represent the payload that will be sent with the message when the ",(0,r.kt)("em",{parentName:"p"},"Send")," signal is triggered. These ports can be added by inspecting the node and clicking the ",(0,r.kt)("em",{parentName:"p"},"Add port")," button in the ",(0,r.kt)("em",{parentName:"p"},"Payload")," section."),(0,r.kt)("h3",{id:"rate-limit"},"RATE LIMIT"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Rate Limit"),"\nThis boolean specifies if there should be a rate limit added to the messages, i.e. if the number of messages should be throttled at a specific value. This could be useful if you have a continouos stream of messages you want to send, for example a sensor reading, but you want to avoid congesting the MQTT broker."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Messages / Sec"),"\nIf ",(0,r.kt)("em",{parentName:"p"},"Rate Limit")," is set, this defines how many messages per second this node will send.")),(0,r.kt)("div",{class:"node-inputs"},(0,r.kt)("h2",{id:"outputs"},"Outputs"),(0,r.kt)("p",null,"This node doesn't have any outputs.")))}m.isMDXComponent=!0},54556:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/send-message-1786b74ce28d1efb19278614603cc5fb.gif"}}]);