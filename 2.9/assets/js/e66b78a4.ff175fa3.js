"use strict";(self.webpackChunknoodl_docs=self.webpackChunknoodl_docs||[]).push([[2916],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>y});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",i={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),u=s(n),m=o,y=u["".concat(c,".").concat(m)]||u[m]||i[m]||a;return n?r.createElement(y,l(l({ref:t},d),{},{components:n})):r.createElement(y,l({ref:t},d))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=m;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p[u]="string"==typeof e?e:o,l[1]=p;for(var s=2;s<a;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2676:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>i,frontMatter:()=>a,metadata:()=>p,toc:()=>s});var r=n(87462),o=(n(67294),n(3905));const a={},l=void 0,p={unversionedId:"modules/mapbox/guides/polygon",id:"modules/mapbox/guides/polygon",title:"polygon",description:"WIP, would be nice to work with the nodes.",source:"@site/library/modules/mapbox/guides/polygon.md",sourceDirName:"modules/mapbox/guides",slug:"/modules/mapbox/guides/polygon",permalink:"/2.9/library/modules/mapbox/guides/polygon",draft:!1,tags:[],version:"current",frontMatter:{}},c={},s=[],d={toc:s},u="wrapper";function i(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"WIP, would be nice to work with the nodes."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const mapbox = Inputs.MapboxObject;\nconst draw = new MapboxDraw({\n  displayControlsDefault: false,\n  // Select which mapbox-gl-draw control buttons to add to the map.\n  controls: {\n    polygon: true,\n    trash: true\n  },\n  // Set mapbox-gl-draw to draw by default.\n  // The user does not have to click the polygon control button first.\n  defaultMode: 'draw_polygon'\n});\nmapbox.addControl(draw);\n\n\nfunction updateArea(e) {\n  const geometry = e.features[0].geometry;\n  Outputs.Geometry = JSON.parse(JSON.stringify(geometry));\n  Outputs.Coordinates = geometry.coordinates;\n\n  // const data = draw.getAll();\n  // const answer = document.getElementById('calculated-area') = Outputs.calculatedarea;\n  // if (data.features.length > 0) {\n  //   const area = turf.area(data);\n  //   // Restrict the area to 2 decimal points.\n  //   const rounded_area = Math.round(area * 100) / 100;\n  //   answer.innerHTML = `<p><strong>${rounded_area}</strong></p><p>square meters</p>`;\n  // } else {\n  //   answer.innerHTML = '';\n  //   if (e.type !== 'draw.delete')\n  //     alert('Click the map to draw a polygon.');\n  // }\n}\n\nmapbox.on('draw.create', updateArea);\nmapbox.on('draw.delete', updateArea);\nmapbox.on('draw.update', updateArea);\n\n// Add keydown event listener to the mapbox container\nmapbox.getCanvas().addEventListener('keydown', (event) => {\n  if (event.keyCode === 13 || event.keyCode === 3) { // 13 is the keycode for the Enter key\n    draw.changeMode('simple_select');\n  }\n});\n")))}i.isMDXComponent=!0}}]);