"use strict";(self.webpackChunknoodl_docs=self.webpackChunknoodl_docs||[]).push([[2313],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=d(n),m=r,h=c["".concat(s,".").concat(m)]||c[m]||u[m]||l;return n?a.createElement(h,o(o({ref:t},p),{},{components:n})):a.createElement(h,o({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[c]="string"==typeof e?e:r,o[1]=i;for(var d=2;d<l;d++)o[d]=n[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},19358:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>d});var a=n(87462),r=(n(67294),n(3905));const l={hide_title:!0,hide_table_of_contents:!0,title:"Send Event node"},o=void 0,i={unversionedId:"events/send-event/README",id:"events/send-event/README",title:"Send Event node",description:"This node sends a signal to another place in your app without having to connect the nodes directly. To learn more about Events check out the Events Guide.",source:"@site/nodes/events/send-event/README.md",sourceDirName:"events/send-event",slug:"/events/send-event/",permalink:"/2.9/nodes/events/send-event/",draft:!1,tags:[],version:"current",frontMatter:{hide_title:!0,hide_table_of_contents:!0,title:"Send Event node"},sidebar:"nodeSidebar",previous:{title:"Inverter node",permalink:"/2.9/nodes/logic/inverter/"},next:{title:"Receive Event node",permalink:"/2.9/nodes/events/receive-event/"}},s={},d=[{value:"Inputs",id:"inputs",level:2}],p={toc:d},c="wrapper";function u(e){let{components:t,...l}=e;return(0,r.kt)(c,(0,a.Z)({},p,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",{className:"is-hidden"},""),(0,r.kt)("h1",{id:"send-event"},"Send Event"),(0,r.kt)("p",null,"This node sends a ",(0,r.kt)("span",{className:"ndl-signal"},"signal")," to another place in your app without having to connect the nodes directly. To learn more about ",(0,r.kt)("strong",{parentName:"p"},"Events")," check out the ",(0,r.kt)("a",{parentName:"p",href:"/docs/guides/business-logic/events"},"Events Guide"),"."),(0,r.kt)("div",{className:"ndl-image-with-background l"},(0,r.kt)("p",null,(0,r.kt)("img",{src:n(295).Z,width:"854",height:"302"}))),(0,r.kt)("p",null,"The ",(0,r.kt)("span",{className:"ndl-node"},"Send Event")," node lets you specify a channel to broadcast to. When this node is triggered with a ",(0,r.kt)("span",{className:"ndl-signal"},"Send signal")," all ",(0,r.kt)("span",{className:"ndl-node"},"Receive Event")," nodes set to that channel will be triggered.\n"),(0,r.kt)("h2",{id:"inputs"},"Inputs"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Mixed"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Custom Inputs")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Send Event")," nodes can have arbitrary input ports that will be passed on to the ",(0,r.kt)("a",{parentName:"td",href:"/nodes/events/receive-event"},"Receive Event")," nodes when the ",(0,r.kt)("em",{parentName:"td"},"Send")," signal is triggered. These ports can be added by inspecting the node and clicking the ",(0,r.kt)("em",{parentName:"td"},"Add port")," button.")))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Data"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("span",{className:"ndl-data"},"Channel Name")),(0,r.kt)("td",{parentName:"tr",align:null},"The channel name can be any identifier and is used on the ",(0,r.kt)("a",{parentName:"td",href:"/nodes/events/receive-event"},"Receive Event")," nodes to connect a sender and receiver node.",(0,r.kt)("br",null),(0,r.kt)("br",null),"There may be multiple ",(0,r.kt)("strong",{parentName:"td"},"Send Event")," nodes with the same channel. In that case the receiving nodes listening to the channel will get a merged set of ports from all ",(0,r.kt)("strong",{parentName:"td"},"Send Event")," nodes.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("span",{className:"ndl-data"},"Send To")),(0,r.kt)("td",{parentName:"tr",align:null},"Controls what components the event will be sent to.",(0,r.kt)("br",null),(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"Global"),": Send to all components",(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"Parent"),": Send the event up the visual hierarchy to parent components.",(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"Children"),": Send the events to all children of this component, and their descendants.",(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"Siblings"),": Send the event to all siblings of this component in the visual hierarchy.")))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Signal"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("span",{className:"ndl-signal"},"Send Event")),(0,r.kt)("td",{parentName:"tr",align:null},"Send a signal to this input to send the event. This is a signal port and when triggered the corresponding ",(0,r.kt)("a",{parentName:"td",href:"/nodes/events/receive-event"},"Receive Event")," nodes will be triggered as well.")))))}u.isMDXComponent=!0},295:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/send-event-287e48c31322b7b653ae2803b86428ba.png"}}]);